
name: Run tests on vhrome with Git hub actions

on: [push, pull_request]

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup
        run: npm install
      - name: Test
        run: npm run test

# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

# name: Node CI

# on: [push]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     strategy:
#       matrix:
#         node-version: [15.x]

#     steps:
#     - uses: nanasess/setup-chromedriver@master
#       with:
#        chromedriver-version: '91.0.4472.19'
#     - run: |
#        export DISPLAY=:99
#        chromedriver --url-base=/wd/hub &
#        sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional
    
#     - uses: actions/checkout@v1
#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v1
#       with:
#         node-version: ${{ matrix.node-version }}
#     - name: npm install, build, and test
#       run: |
#         npm ci
#         npm run build --if-present
#         ./node_modules/.bin/wdio wdio.conf.js
#       env:
#         CI: true
###########################
# name: "Test chromedriver on *NIX"
# on:
#   push:
#     branches:
#       - '*'
#     tags:
#       - '*'
#     paths:
#       - '**'
#       - '!*.md'
#   pull_request:
#     branches:
#       - '*'
#     paths:
#       - '**'
#       - '!*.md'

# jobs:
#   test:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ ubuntu-latest, macos-latest ]
#     steps:
#     - uses: actions/checkout@v2
#     - if: matrix.os == 'ubuntu-latest'
#       run: echo 'CHROMEAPP=google-chrome' >> $GITHUB_ENV
#     - if: matrix.os == 'macos-latest'
#       run: echo 'CHROMEAPP=/Applications/Google Chrome.app/Contents/MacOS/Google Chrome' >> $GITHUB_ENV
#     - run: npm ci
#     - run: npm run build
#     - run: npm test
#     - run: |
#         CHROME_VERSION=$("$CHROMEAPP" --version | cut -f 3 -d ' ' | cut -d '.' -f 1)
#         echo "CHROMEDRIVER_VERSION=$(curl --location --fail --retry 10 http://chromedriver.storage.googleapis.com/LATEST_RELEASE_${CHROME_VERSION})" >> $GITHUB_ENV
#     - uses: ./
#       with:
#         chromedriver-version: ${{ env.CHROMEDRIVER_VERSION }}
#     - name: setup
#       run: |
#         sudo pip3 install selenium
#         export DISPLAY=:99
#         chromedriver --url-base=/wd/hub &
#         sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # disable headless mode
#         python3 $GITHUB_WORKSPACE/__tests__/chromedriver.py
#   test_default_version:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         os: [ ubuntu-latest, macos-latest ]
#     steps:
#     - uses: actions/checkout@v2
#     - if: matrix.os == 'ubuntu-latest'
#       run: echo 'CHROMEAPP=google-chrome' >> $GITHUB_ENV
#     - if: matrix.os == 'macos-latest'
#       run: echo 'CHROMEAPP=/Applications/Google Chrome.app/Contents/MacOS/Google Chrome' >> $GITHUB_ENV
#     - run: npm ci
#     - run: npm run build
#     - run: npm test
#     - uses: ./
#     - name: setup
#       run: |
#         "$CHROMEAPP" --version
#         sudo pip3 install selenium
#         export DISPLAY=:99
#         chromedriver --url-base=/wd/hub &
#         sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # disable headless mode
#         python3 $GITHUB_WORKSPACE/__tests__/chromedriver.py
#########################
